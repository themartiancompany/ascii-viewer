#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0-or-later

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
source \
  "${_lib}/libcrash-bash/crash-bash"

# shellcheck disable=SC2034
_global_variables() {
  view_date=""
  in_files=()
  color=""
  quiet=""
}

_requirements() {
  local \
    _os
  _os="$( \
    uname \
      -o)"
  _check_cmd \
    'cat' \
    'coreutils'
  if [[ "${_os}" == "Android" ]]; then
    _check_cmd \
      'sdotool'
  elif [[ "${_os}" == "GNU/Linux" ]]; then
    _check_cmd \
      'setfont' \
      'kbd'
    _check_cmd \
      'showconsolefont' \
      'kbd'
  fi
}

_ascii_viewer() {
  local \
    _in=() \
    _os
  _in+=(
    "$@"
  )
  _os="$( \
    uname \
      -o)"
  if [[ "${_os}" == "Android" ]]; then
    sdotool \
      key \
        back
  fi
  cat \
    "${_in[@]}"
}

_set_overrides() {
  _set_override \
    "view" \
    "date" \
    "$(_get_date_human)"
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _exit="${1}" \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true
Cross-platform ASCII picture viewer.

Usage:
  $(_get "app" "name")
    [options]
    [in_file]
  options:

     -h                   This message.
     -c                   Enable color output
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${_exit}"
}

# Shows configuration options.
_show_config() {
  _msg_info "${app_name} configuration"
  _msg_info "                View date:   $(_get "view" "date")"
  _msg_info "                 In files:   ${in_files[*]}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2034
while \
  getopts \
    'i:p:cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
         _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))
in_files+=(
  "$@"
)
if [[ "${in_files[*]}" ==  "" ]]; then
  _msg_error \
    "no files given" \
    0
  _set_overrides
  _usage \
    1
fi
_set_overrides
_config_user_init \
  "$( \
    _get \
      "app" \
      "name")"
_show_config
app_opts=(
  "${in_files[@]}"
)
_ascii_viewer \
  "${app_opts[@]}"

# vim:set sw=2 sts=-1 et:
